{
  "version": 3,
  "file": "html.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\html.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# html.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, words, isEmpty, nonEmpty,\r\n\ttoBlock, OL, getOptions,\r\n\t} from '@jdeighan/base-utils'\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {dbgEnter, dbgReturn, dbg} from '@jdeighan/base-utils/debug'\r\nimport {indented} from '@jdeighan/base-utils/indent'\r\n\r\nhNoEnd = {}\r\nfor tagName in words('area base br col command embed hr img input' \\\r\n\t\t+ ' keygen link meta param source track wbr')\r\n\thNoEnd[tagName] = true\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport parsetag = (line) =>\r\n\r\n\tif lMatches = line.match(///^\r\n\t\t\t(?:\r\n\t\t\t\t([A-Za-z][A-Za-z0-9_]*)  # variable name\r\n\t\t\t\t\\s*\r\n\t\t\t\t=\r\n\t\t\t\t\\s*\r\n\t\t\t\t)?                       # variable is optional\r\n\t\t\t([A-Za-z][A-Za-z0-9_]*)     # tag name\r\n\t\t\t(?:\r\n\t\t\t\t\\:\r\n\t\t\t\t( [a-z]+ )\r\n\t\t\t\t)?\r\n\t\t\t(\\S*)                       # modifiers (class names, etc.)\r\n\t\t\t\\s*\r\n\t\t\t(.*)                        # attributes & enclosed text\r\n\t\t\t$///)\r\n\t\t[_, varName, tagName, subtype, modifiers, rest] = lMatches\r\n\telse\r\n\t\tcroak \"parsetag(): Invalid HTML: '#{line}'\"\r\n\r\n\t# --- Handle classes - subtypes and added via .<class>\r\n\tlClasses = []\r\n\tif nonEmpty(subtype) && (tagName != 'svelte')\r\n\t\tlClasses.push subtype\r\n\r\n\tif modifiers\r\n\t\t# --- currently, these are only class names\r\n\t\twhile lMatches = modifiers.match(///^\r\n\t\t\t\t\\. ([A-Za-z][A-Za-z0-9_]*)\r\n\t\t\t\t///)\r\n\t\t\t[all, className] = lMatches\r\n\t\t\tlClasses.push className\r\n\t\t\tmodifiers = modifiers.substring(all.length)\r\n\t\tif modifiers\r\n\t\t\tcroak \"parsetag(): Invalid modifiers in '#{line}'\"\r\n\r\n\t# --- Handle attributes\r\n\thAttr = {}     # { name: { value: <value>, quote: <quote> }, ... }\r\n\r\n\tif varName\r\n\t\thAttr['bind:this'] = {value: varName, quote: '{'}\r\n\r\n\tif (tagName == 'script') && (subtype == 'startup')\r\n\t\thAttr['context'] = {value: 'module', quote: '\"'}\r\n\r\n\tif rest\r\n\t\twhile lMatches = rest.match(///^\r\n\t\t\t\t(?:\r\n\t\t\t\t\t(?:\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t( bind | on )          # prefix\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t([A-Za-z][A-Za-z0-9_]*)   # attribute name\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t=\r\n\t\t\t\t\t(?:\r\n\t\t\t\t\t\t  \\{ ([^}]*) \\}           # attribute value\r\n\t\t\t\t\t\t| \" ([^\"]*) \"\r\n\t\t\t\t\t\t| ' ([^']*) '\r\n\t\t\t\t\t\t|   ([^\"'\\s]+)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t|\r\n\t\t\t\t\t\\{\r\n\t\t\t\t\t([A-Za-z][A-Za-z0-9_]*)\r\n\t\t\t\t\t\\}\r\n\t\t\t\t\t) \\s*\r\n\t\t\t\t///)\r\n\t\t\t[all, prefix, attrName, br_val, dq_val, sq_val, uq_val, ident] = lMatches\r\n\t\t\tif ident\r\n\t\t\t\thAttr[ident] = { value: ident, shorthand: true }\r\n\t\t\telse\r\n\t\t\t\tif br_val\r\n\t\t\t\t\tvalue = br_val\r\n\t\t\t\t\tquote = '{'\r\n\t\t\t\telse\r\n\t\t\t\t\tassert ! prefix?, \"prefix requires use of {...}\"\r\n\t\t\t\t\tif dq_val\r\n\t\t\t\t\t\tvalue = dq_val\r\n\t\t\t\t\t\tquote = '\"'\r\n\t\t\t\t\telse if sq_val\r\n\t\t\t\t\t\tvalue = sq_val\r\n\t\t\t\t\t\tquote = \"'\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tvalue = uq_val\r\n\t\t\t\t\t\tquote = ''\r\n\r\n\t\t\t\tif prefix\r\n\t\t\t\t\tattrName = \"#{prefix}:#{attrName}\"\r\n\r\n\t\t\t\tif attrName == 'class'\r\n\t\t\t\t\tfor className in value.split(/\\s+/)\r\n\t\t\t\t\t\tlClasses.push className\r\n\t\t\t\telse\r\n\t\t\t\t\tif hAttr.attrName?\r\n\t\t\t\t\t\tcroak \"parsetag(): Multiple attributes named '#{attrName}'\"\r\n\t\t\t\t\thAttr[attrName] = { value, quote }\r\n\r\n\t\t\trest = rest.substring(all.length)\r\n\r\n\t# --- The rest is contained text\r\n\trest = rest.trim()\r\n\tif lMatches = rest.match(///^\r\n\t\t\t['\"]\r\n\t\t\t(.*)\r\n\t\t\t['\"]\r\n\t\t\t$///)\r\n\t\trest = lMatches[1]\r\n\r\n\t# --- Add class attribute to hAttr if there are classes\r\n\tif (lClasses.length > 0)\r\n\t\thAttr.class = {\r\n\t\t\tvalue: lClasses.join(' '),\r\n\t\t\tquote: '\"',\r\n\t\t\t}\r\n\r\n\t# --- Build the return value\r\n\thToken = {\r\n\t\ttype: 'tag'\r\n\t\ttagName\r\n\t\t}\r\n\r\n\tif subtype\r\n\t\thToken.subtype = subtype\r\n\t\thToken.orgtag = \"#{tagName}:#{subtype}\"\r\n\telse\r\n\t\thToken.orgtag = tagName\r\n\r\n\t# --- if tagName == 'svelte', set hToken.tagName to hToken.orgtag\r\n\tif (tagName == 'svelte')\r\n\t\thToken.tagName = hToken.orgtag\r\n\r\n\tif nonEmpty(hAttr)\r\n\t\thToken.hAttr = hAttr\r\n\r\n\t# --- Is there contained text?\r\n\tif rest\r\n\t\thToken.text = rest\r\n\r\n\treturn hToken\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- export only for unit testing\r\n\r\nexport attrStr = (hAttr) =>\r\n\r\n\tif ! hAttr\r\n\t\treturn ''\r\n\tstr = ''\r\n\tfor attrName in Object.getOwnPropertyNames(hAttr)\r\n\t\t{value, quote, shorthand} = hAttr[attrName]\r\n\t\tif shorthand\r\n\t\t\tstr += \" {#{value}}\"\r\n\t\telse\r\n\t\t\tif quote == '{'\r\n\t\t\t\tbquote = '{'\r\n\t\t\t\tequote = '}'\r\n\t\t\telse\r\n\t\t\t\tbquote = equote = quote\r\n\t\t\tstr += \" #{attrName}=#{bquote}#{value}#{equote}\"\r\n\treturn str\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport tag2str = (hToken, type='begin') =>\r\n\r\n\t{tagName, hAttr} = hToken\r\n\tif (type == 'begin')\r\n\t\tstr = \"<#{tagName}\"    # build the string bit by bit\r\n\t\tif nonEmpty(hAttr)\r\n\t\t\tstr += attrStr(hAttr)\r\n\t\tstr += '>'\r\n\t\treturn str\r\n\telse if (type == 'end')\r\n\t\tif hNoEnd[tagName]\r\n\t\t\treturn undef\r\n\t\telse\r\n\t\t\treturn \"</#{tagName}>\"\r\n\telse\r\n\t\tcroak \"type must be 'begin' or 'end'\"\r\n\r\n# ---------------------------------------------------------------------------\r\n#    elem - indent text, surround with HTML tags\r\n\r\nexport elem = (tagName, hAttr=undef, text=undef, oneIndent=\"\\t\") =>\r\n\r\n\tif isEmpty(text)\r\n\t\thToken = {tagName, hAttr}\r\n\t\treturn tag2str(hToken, 'begin') + tag2str(hToken, 'end')\r\n\telse\r\n\t\thToken = {tagName, hAttr, text}\r\n\t\treturn toBlock([\r\n\t\t\ttag2str(hToken, 'begin')\r\n\t\t\tindented(text, 1, oneIndent)\r\n\t\t\ttag2str(hToken, 'end')\r\n\t\t\t])\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport formatHTML = (html, hOptions={}) =>\r\n\r\n\tdbgEnter 'formatHTML', html, hOptions\r\n\t{oneIndent} = getOptions(hOptions, {\r\n\t\toneIndent: '   '\r\n\t\t})\r\n\r\n\tif (notdefined(html))\r\n\t\tdbgReturn 'formatHTML', ''\r\n\t\treturn ''\r\n\thtml = html.trim()    # remove any leading/trailing whitespace\r\n\tif (html == '')\r\n\t\tdbgReturn 'formatHTML', ''\r\n\t\treturn ''\r\n\r\n\tassert html.charAt(0) == '<', \"Bad HTML, no < at start\"\r\n\tassert html.charAt(html.length-1) == '>', \"Bad HTML, no > at end\"\r\n\r\n\t# --- Remove leading '<' and trailing '>'\r\n\thtml = html.substring(1, html.length-1)\r\n\r\n\thNoEndTag = {}\r\n\tfor tag in words(\"\"\"\r\n\t\t\tbr hr img input link base\r\n\t\t\tmeta param area embed\r\n\t\t\tcol track source\r\n\t\t\t\"\"\")\r\n\t\thNoEndTag[tag] = true\r\n\r\n\tlParts = []\r\n\tlevel = 0\r\n\r\n\tfor elem in html.split(/>\\s*</)\r\n\t\tdbg \"ELEM: #{OL(elem)}\"\r\n\t\t[_, endMarker, tagName, rest] = elem.match(///^\r\n\t\t\t(\\/)?                     # possible end tag\r\n\t\t\t([A-Za-z][A-Za-z0-9-]*)   # tag name\r\n\t\t\t(.*)                      # everything else\r\n\t\t\t$///)\r\n\t\tif endMarker\r\n\t\t\tdbg \"   TAG: #{OL(tagName)} - END MARKER\"\r\n\t\telse\r\n\t\t\tdbg \"   TAG: #{OL(tagName)} - NO END MARKER\"\r\n\r\n\t\tif endMarker && (level > 0)\r\n\t\t\t# --- If end tag, reduce level\r\n\t\t\tdbg \"   reduce level #{level} to #{level-1}\"\r\n\t\t\tlevel -= 1\r\n\r\n\t\tdbg \"   ADD #{OL(elem)} at level #{level}\"\r\n\t\tlParts.push oneIndent.repeat(level), \"<#{elem}>\\n\"\r\n\r\n\t\tif ! endMarker && ! hNoEndTag[tagName] && !rest.endsWith('/'+tagName)\r\n\t\t\tdbg \"   inc level #{level} to #{level+1}\"\r\n\t\t\tlevel += 1\r\n\r\n\tresult = lParts.join('').trim()\r\n\tdbgReturn 'formatHTML', result\r\n\treturn result\r\n"
  ]
}