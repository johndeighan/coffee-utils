{
  "version": 3,
  "file": "Section.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\Section.coffee"
  ],
  "names": [],
  "mappings": ";AAAgB;AAEhB,OAAA;EAAQ,MAAR;EAAgB,KAAhB;CAAA,MAAA;;AACA,OAAA;EAAQ,GAAR;EAAa,QAAb;EAAuB,SAAvB;CAAA,MAAA;;AACA,OAAA;EACC,IADD;EACO,KADP;EACc,OADd;EACuB,OADvB;EACgC,OADhC;EACyC,UADzC;EACqD,OADrD;CAAA,MAAA,uBAJgB;;;AAUhB,OAAA,IAAa,UAAN,MAAA,QAAA;EAEN,WAAa,KAAA,aAAkB,KAAlB,CAAA;IAAC,IAAC,CAAA;IAAM,IAAC,CAAA,oBACvB;;IAEE,IAAC,CAAA,MAAD,GAAU;IACV,IAAG,OAAA,CAAQ,IAAC,CAAA,QAAT,CAAH;MACC,MAAA,CAAO,UAAA,CAAW,IAAC,CAAA,QAAZ,CAAP,EAA8B,cAA9B,EADD;;EAJY,CAAd;;;EASC,OAAS,CAAA,CAAA;AAER,WAAQ,IAAC,CAAA,MAAM,CAAC,MAAR,KAAkB;EAFlB,CATV;;;EAeC,QAAU,CAAA,CAAA;AAET,WAAQ,IAAC,CAAA,MAAM,CAAC,MAAR,GAAiB;EAFhB,CAfX;;;EAqBC,GAAK,CAAC,IAAD,CAAA;AAEN,QAAA,CAAA,EAAA,GAAA,EAAA;IAAE,IAAG,OAAA,CAAQ,IAAR,CAAH;MACC,KAAA,sCAAA;;QACC,IAAC,CAAA,MAAM,CAAC,IAAR,CAAa,IAAb;MADD,CADD;KAAA,MAAA;MAIC,IAAC,CAAA,MAAM,CAAC,IAAR,CAAa,IAAb,EAJD;;EAFI,CArBN;;;EAgCC,OAAS,CAAC,IAAD,CAAA;IAER,IAAG,OAAA,CAAQ,IAAR,CAAH;MACC,IAAC,CAAA,MAAD,GAAU,CAAC,GAAA,IAAD,EAAU,GAAA,IAAC,CAAA,MAAX,EADX;KAAA,MAAA;MAGC,IAAC,CAAA,MAAD,GAAU,CAAC,IAAD,EAAO,GAAA,IAAC,CAAA,MAAR,EAHX;;EAFQ,CAhCV;;;EA0CC,QAAU,CAAA,CAAA;AAET,WAAO,IAAC,CAAA;EAFC,CA1CX;;;EAgDC,QAAU,CAAA,CAAA;AAEX,QAAA;IAAE,QAAA,CAAS,kBAAT;IACA,IAAI,IAAC,CAAA,MAAM,CAAC,MAAR,KAAkB,CAAtB;MACC,SAAA,CAAU,kBAAV,EAA8B,KAA9B;AACA,aAAO,MAFR;;IAGA,KAAA,GAAQ,OAAA,CAAQ,IAAC,CAAA,MAAT;IACR,IAAG,OAAA,CAAQ,IAAC,CAAA,QAAT,CAAH;MACC,KAAA,GAAQ,IAAC,CAAA,QAAD,CAAU,KAAV,EADT;;IAEA,SAAA,CAAU,kBAAV,EAA8B,KAA9B;AACA,WAAO;EAVE;;AAlDJ",
  "sourcesContent": [
    "# Section.coffee\r\n\r\nimport {assert, croak} from '@jdeighan/base-utils/exceptions'\r\nimport {dbg, dbgEnter, dbgReturn} from '@jdeighan/base-utils/debug'\r\nimport {\r\n\tpass, undef, defined, isArray, isEmpty, isFunction, toBlock,\r\n\t} from '@jdeighan/base-utils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class Section\r\n\r\n\tconstructor: (@name, @replacer=undef) ->\r\n\t\t# --- name can be undef or empty\r\n\r\n\t\t@lParts = []\r\n\t\tif defined(@replacer)\r\n\t\t\tassert isFunction(@replacer), \"bad replacer\"\r\n\r\n\t# ..........................................................\r\n\r\n\tisEmpty: () ->\r\n\r\n\t\treturn (@lParts.length == 0)\r\n\r\n\t# ..........................................................\r\n\r\n\tnonEmpty: () ->\r\n\r\n\t\treturn (@lParts.length > 0)\r\n\r\n\t# ..........................................................\r\n\r\n\tadd: (data) ->\r\n\r\n\t\tif isArray(data)\r\n\t\t\tfor line in data\r\n\t\t\t\t@lParts.push line\r\n\t\telse\r\n\t\t\t@lParts.push data\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tprepend: (data) ->\r\n\r\n\t\tif isArray(data)\r\n\t\t\t@lParts = [data..., @lParts...]\r\n\t\telse\r\n\t\t\t@lParts = [data, @lParts...]\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tgetParts: () ->\r\n\r\n\t\treturn @lParts\r\n\r\n\t# ..........................................................\r\n\r\n\tgetBlock: () ->\r\n\r\n\t\tdbgEnter \"Section.getBlock\"\r\n\t\tif (@lParts.length == 0)\r\n\t\t\tdbgReturn \"Section.getBlock\", undef\r\n\t\t\treturn undef\r\n\t\tblock = toBlock(@lParts)\r\n\t\tif defined(@replacer)\r\n\t\t\tblock = @replacer block\r\n\t\tdbgReturn \"Section.getBlock\", block\r\n\t\treturn block\r\n"
  ]
}