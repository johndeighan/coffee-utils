// Generated by CoffeeScript 2.7.0
  // arrow.coffee
import {
  undef,
  OL,
  setCharsAt
} from '@jdeighan/coffee-utils';

// --- We use spaces here because Windows Terminal handles TAB chars badly
export var vbar = '│'; // unicode 2502

export var hbar = '─'; // unicode 2500

export var corner = '└'; // unicode 2514

export var arrowhead = '>';

export var space = ' ';

export var oneIndent = vbar + space + space + space;

export var arrow = corner + hbar + arrowhead + space;

export var clearIndent = space + space + space + space;

// ---------------------------------------------------------------------------
export var getPrefix = function(level, option = 'none') {
  var result;
  if (level === 0) {
    if (option === 'object') {
      return clearIndent;
    } else {
      return '';
    }
  }
  switch (option) {
    case 'withArrow':
      result = oneIndent.repeat(level - 1) + arrow;
      break;
    case 'object':
      result = oneIndent.repeat(level) + clearIndent;
      break;
    case 'none':
      result = oneIndent.repeat(level);
      break;
    default:
      throw new Error(`getPrefix(): Bad option: '${option}'`);
  }
  if (result.length % 4 !== 0) {
    throw new Error(`getPrefix(): Bad prefix '${result}'`);
  }
  return result;
};

// ---------------------------------------------------------------------------
export var addArrow = function(prefix) {
  var pos, result;
  //	console.log "in addArrow(#{OL(prefix)})"
  pos = prefix.lastIndexOf(vbar);
  //	console.log "pos = #{pos}"
  if (pos === -1) {
    result = prefix;
  } else {
    result = setCharsAt(prefix, pos, arrow);
  }
  //	console.log "result = #{OL(result)}"
  return result;
};

// ---------------------------------------------------------------------------
export var removeLastVbar = function(prefix) {
  var pos, result;
  //	console.log "in removeLastVbar(#{OL(prefix)})"
  pos = prefix.lastIndexOf(vbar);
  //	console.log "pos = #{pos}"
  if (pos === -1) {
    result = prefix;
  } else {
    result = setCharsAt(prefix, pos, ' ');
  }
  //	console.log "result = #{OL(result)}"
  return result;
};
