# fsa.test.cielo

import {assert, croak} from '@jdeighan/exceptions'
import {LOG} from '@jdeighan/exceptions/log'
import {tester} from '@jdeighan/unit-tester'
import {undef, escapeStr} from '@jdeighan/coffee-utils'
import {FSA} from '@jdeighan/coffee-utils/fsa'

# ---------------------------------------------------------------------------

block = """
	start   'tag'      start
	start   '#if'      if1
	start   EOF        end
	if1     'tag'      start   {/if}
	if1     '#elsif'   if1
	if1     EOF        end     {/if}
	if1     '#else'    if2
	if2     'tag'      start   {/if}
	if2     '#if'      if1     {/if}
	if2     EOF        end     {/if}
	"""

fsa = new FSA(block)

tester.equal {{LINE}}, fsa.state(), 'start'

[newState, output] = fsa.got('tag')
tester.equal {{LINE}}, newState, 'start'
tester.equal {{LINE}}, fsa.state(), 'start'
tester.equal {{LINE}}, output, undef

[newState, output] = fsa.got('#if')
tester.equal {{LINE}}, newState, 'if1'
tester.equal {{LINE}}, fsa.state(), 'if1'
tester.equal {{LINE}}, output, undef

[newState, output] = fsa.got('tag')
tester.equal {{LINE}}, newState, 'start'
tester.equal {{LINE}}, fsa.state(), 'start'
tester.equal {{LINE}}, output, '{/if}'


