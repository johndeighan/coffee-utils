{
  "version": 3,
  "file": "block.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\block.test.coffee"
  ],
  "names": [],
  "mappings": ";AAAmB;AAAA,IAAA;;AAEnB,OAAA;EAAQ,KAAR;EAAe,OAAf;EAAwB,OAAxB;CAAA,MAAA;;AACA,OAAA;EAAQ,MAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,GAAR;CAAA,MAAA;;AAEA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EACC,SADD;EACY,cADZ;EAEC,cAFD;EAEiB,aAFjB;EAEgC,UAFhC;CAAA,MAAA;;AAIA,OAAA;EAAQ,KAAR;EAAe,MAAf;CAAA,MAAA;;AAEA,OAAA,GAAU,KAAA,CAAM,eAAN,EAbS;;;AAiBnB,KAAA,CAAM,OAAA,CAAQ,YAAR,CAAN,EAA6B,CAC5B,KAD4B,EAE5B,KAF4B,EAG5B,EAH4B,CAA7B;;AAMA,KAAA,CAAM,OAAA,CAAQ,UAAR,CAAN,EAA2B,CAC1B,KAD0B,EAE1B,KAF0B,CAA3B;;AAKA,KAAA,CAAM,OAAA,CAAQ,cAAR,CAAN,EAA+B,CAC9B,KAD8B,EAE9B,EAF8B,EAG9B,KAH8B,EAI9B,EAJ8B,CAA/B,EA5BmB;;;AAqCnB,KAAA,CAAM,OAAA,CAAQ,UAAR,CAAN,EAA2B,CAC1B,KAD0B,EAE1B,KAF0B,CAA3B;;AAKA,KAAA,CAAM,OAAA,CAAQ,CAAA;GAAA,CAAR,CAAN,EAGO,CACN,KADM,EAEN,KAFM,CAHP;;AAQA,KAAA,CAAM,OAAA,CAAQ,CAAA;GAAA,CAAR,EAGA,cAHA,CAAN,EAGuB,CACtB,KADsB,EAEtB,KAFsB,CAHvB;;AAQA,KAAA,CAAM,OAAA,CAAQ,CAAA;;;;;;;;;gCAAA,CAAR,CAAN,EAWO,CACN,0BADM,EAEN,wBAFM,EAGN,wBAHM,EAIN,kCAJM,EAKN,wBALM,EAMN,kCANM,EAON,wBAPM,EAQN,kCARM,EASN,kCATM,EAUN,kCAVM,CAXP;;AAwBA,KAAA,CAAM,OAAA,CAAQ,CAAA;;;;;;;;;gCAAA,CAAR,EAWA,cAXA,CAAN,EAWuB,CACtB,0BADsB,EAEtB,wBAFsB,EAGtB,wBAHsB,EAItB,kCAJsB,EAKtB,wBALsB,EAMtB,kCANsB,EAOtB,wBAPsB,EAQtB,kCARsB,EAStB,kCATsB,EAUtB,kCAVsB,CAXvB;;AAwBA,KAAA,CAAM,OAAA,CAAQ,YAAR,CAAN,EAA6B,CAC5B,KAD4B,EAE5B,EAF4B,EAG5B,KAH4B,CAA7B;;AAMA,KAAA,CAAM,OAAA,CAAQ,gBAAR,CAAN,EAAiC,CAChC,KADgC,EAEhC,EAFgC,EAGhC,EAHgC,EAIhC,KAJgC,EAKhC,EALgC,CAAjC,EAhHmB;;;AA0HnB,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAQ,KAAR,CAAR,CAAN,EAA+B,CAC9B,KAD8B,EAE9B,KAF8B,CAA/B;;AAKA,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAQ,EAAR,EAAY,KAAZ,CAAR,CAAN,EAAmC,CAClC,KADkC,EAElC,EAFkC,EAGlC,KAHkC,CAAnC;;AAMA,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAQ,EAAR,EAAY,EAAZ,EAAgB,KAAhB,EAAuB,EAAvB,CAAR,CAAN,EAA2C,CAC1C,KAD0C,EAE1C,EAF0C,EAG1C,EAH0C,EAI1C,KAJ0C,EAK1C,EAL0C,CAA3C,EArImB;;;AA+InB,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAO,KAAP,CAAR,CAAN,EAA8B,CAC7B,KAD6B,EAE7B,KAF6B,CAA9B;;AAKA,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAO,KAAP,EAAa,EAAb,CAAR,CAAN,EAAiC,CAChC,KADgC,EAEhC,KAFgC,EAGhC,EAHgC,CAAjC;;AAMA,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAO,EAAP,EAAU,KAAV,CAAR,CAAN,EAAiC,CAChC,KADgC,EAEhC,EAFgC,EAGhC,KAHgC,CAAjC,EA1JmB;;;;AAmKnB,KAAA,CAAM,OAAA,CAAQ,CAAC,UAAD,EAAa,KAAb,CAAR,CAAN,EAAoC,CACnC,KADmC,EAEnC,KAFmC,EAGnC,KAHmC,CAApC,EAnKmB;;;;AA4KnB,KAAA,CAAM,OAAA,CAAQ,KAAR,CAAN,EAAsB,EAAtB;;AACA,KAAA,CAAM,OAAA,CAAQ,EAAR,CAAN,EAAmB,EAAnB;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,EAAD,CAAR,CAAN,EAAqB,EAArB;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,EAAD,EAAK,EAAL,CAAR,CAAN,EAAyB,IAAzB;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR,CAAN,EAAgC,SAAhC;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAR,CAAN,EAAmC,SAAnC;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAR,CAAN,EAA8B,SAA9B;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,GAAD,EAAK,KAAL,EAAW,GAAX,EAAe,GAAf,CAAR,CAAN,EAAoC,SAApC;;AACA,KAAA,CAAM,OAAA,CAAQ,CAAC,KAAD,EAAO,GAAP,EAAW,GAAX,EAAe,GAAf,EAAmB,KAAnB,CAAR,CAAN,EAA0C,SAA1C,EApLmB;;;AAwLnB,KAAA,CAAM,SAAA,CAAU,CAAA;;OAAA,CAAV,CAAN,EAIO,YAJP,EAxLmB;;;AAgMnB,KAAA,CAAM,cAAA,CAAe,CAAA;;OAAA,CAAf,CAAN,EAIO,CAAA;OAAA,CAJP,EAhMmB;;;AA2MnB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA;EAAC,GAAA,GAAM,UAAA,CAAW,WAAX,EAAwB,EAAxB,EAA4B,kBAA5B;SACN,KAAA,CAAM,GAAN,EAAW,CAAA;;OAAA,CAAX;AAFA,CAAD,CAAA,CAAA;;AASA,KAAA,CAAM,UAAA,CAAW,GAAX,EAAgB,GAAhB,CAAN,EAA4B,MAA5B;;AACA,KAAA,CAAM,UAAA,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,CAAN,EAA8B,MAA9B,EArNmB;;;AAuNnB,KAAA,CAAM,UAAA,CAAW,CAAC,GAAD,CAAX,EAAkB,CAAC,GAAD,CAAlB,CAAN,EAAgC,MAAhC,EAvNmB;;;AA2NnB,KAAA,CAAM,cAAA,CAAe,CAAA;MAAA,CAAf,CAAN,EAGO,CAAA;MAAA,CAHP;;AAQA,KAAA,CAAM,cAAA,CAAe,CAAA;;MAAA,CAAf,CAAN,EAIO,CAAA;MAAA,CAJP;;AASA,KAAA,CAAM,cAAA,CAAe,CAAA;;;;;AAAA,CAAf,CAAN,EAOO,CAAA;MAAA,CAPP,EA5OmB;;;AA0PnB,KAAA,CAAM,aAAA,CAAc,CAAA;;;MAAA,CAAd,EAKA,CALA,CAAN,EAKU,CAAA;MAAA,CALV,EA1PmB;;;AAsQnB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,OAAA,EAAA;EAAC,OAAA,GAAU,CACT,4CADS,EAET,EAFS,EAGT,+BAHS,EAIT,EAJS;EAMV,GAAA,GAAM,UAAA,CAAW,GAAA,OAAX;SACN,KAAA,CAAM,GAAN,EAAW,CAAA;;;SAAA,CAAX;AARA,CAAD,CAAA,CAAA,EAtQmB;;;AAwRnB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,IAAA,EAAA,QAAA,EAAA;EAAC,QAAA,GAAW,CACV,4CADU;EAGX,IAAA,GAAO,CAAA;0BAAA;EAIP,GAAA,GAAM,UAAA,CAAW,GAAA,QAAX,EAAwB,IAAxB;SACN,KAAA,CAAM,GAAN,EAAW,CAAA;;0BAAA,CAAX;AATA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# block.test.coffee\n\nimport {undef, toArray, toBlock} from '@jdeighan/base-utils'\nimport {assert} from '@jdeighan/base-utils/exceptions'\nimport {LOG} from '@jdeighan/base-utils/log'\n\nimport {equal} from '@jdeighan/base-utils/utest'\nimport {\n\tfirstLine, remainingLines,\n\tnormalizeBlock, truncateBlock, joinBlocks,\n\t} from '@jdeighan/coffee-utils/block'\nimport {mydir, mkpath} from '@jdeighan/coffee-utils/fs'\n\ntestDir = mydir(`import.meta.url`)\n\n# ---------------------------------------------------------------------------\n\nequal toArray(\"abc\\nxyz\\n\"), [\n\t'abc'\n\t'xyz'\n\t''\n\t]\n\nequal toArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray(\"abc\\n\\nxyz\\n\"), [\n\t'abc'\n\t''\n\t'xyz'\n\t''\n\t]\n\n# ---------------------------------------------------------------------------\n\nequal toArray(\"abc\\nxyz\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray(\"\"\"\n\tabc\n\txyz\n\t\"\"\"), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray(\"\"\"\n\tabc\n\txyz\n\t\"\"\", 'noEmptyLines'), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray(\"\"\"\n\tstart   tag        start\n\tstart   '#if'      if1\n\tstart   EOF        end\n\tif1     tag        start   {/if}\n\tif1     '#elsif'   if1\n\tif1     EOF        end     {/if}\n\tif1     '#else'    if2\n\tif2     tag        start   {/if}\n\tif2     '#if'      if1     {/if}\n\tif2     EOF        end     {/if}\n\t\"\"\"), [\n\t\"start   tag        start\"\n\t\"start   '#if'      if1\"\n\t\"start   EOF        end\"\n\t\"if1     tag        start   {/if}\"\n\t\"if1     '#elsif'   if1\"\n\t\"if1     EOF        end     {/if}\"\n\t\"if1     '#else'    if2\"\n\t\"if2     tag        start   {/if}\"\n\t\"if2     '#if'      if1     {/if}\"\n\t\"if2     EOF        end     {/if}\"\n\t]\n\nequal toArray(\"\"\"\n\tstart   tag        start\n\tstart   '#if'      if1\n\tstart   EOF        end\n\tif1     tag        start   {/if}\n\tif1     '#elsif'   if1\n\tif1     EOF        end     {/if}\n\tif1     '#else'    if2\n\tif2     tag        start   {/if}\n\tif2     '#if'      if1     {/if}\n\tif2     EOF        end     {/if}\n\t\"\"\", 'noEmptyLines'), [\n\t\"start   tag        start\"\n\t\"start   '#if'      if1\"\n\t\"start   EOF        end\"\n\t\"if1     tag        start   {/if}\"\n\t\"if1     '#elsif'   if1\"\n\t\"if1     EOF        end     {/if}\"\n\t\"if1     '#else'    if2\"\n\t\"if2     tag        start   {/if}\"\n\t\"if2     '#if'      if1     {/if}\"\n\t\"if2     EOF        end     {/if}\"\n\t]\n\nequal toArray(\"abc\\n\\nxyz\"), [\n\t'abc'\n\t''\n\t'xyz'\n\t]\n\nequal toArray(\"abc\\n\\n\\nxyz\\n\"), [\n\t'abc'\n\t''\n\t''\n\t'xyz'\n\t''\n\t]\n\n# ... pass in an array\n\nequal toArray([\"abc\", \"xyz\"]), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray([\"abc\", \"\", \"xyz\"]), [\n\t'abc'\n\t''\n\t'xyz'\n\t]\n\nequal toArray([\"abc\", \"\", \"\", \"xyz\", \"\"]), [\n\t'abc'\n\t''\n\t''\n\t'xyz'\n\t''\n\t]\n\n# ---------------------------------------------------------------------------\n\nequal toArray(['abc','xyz']), [\n\t'abc'\n\t'xyz'\n\t]\n\nequal toArray(['abc','xyz','']), [\n\t'abc'\n\t'xyz'\n\t''\n\t]\n\nequal toArray(['abc','','xyz']), [\n\t'abc'\n\t''\n\t'xyz'\n\t]\n\n# ---------------------------------------------------------------------------\n# --- MUST also split internal strings\n\nequal toArray(['abc\\ndef', 'ghi']), [\n\t'abc'\n\t'def'\n\t'ghi'\n\t]\n\n# ---------------------------------------------------------------------------\n# --- test toBlock()\n\nequal toBlock(undef), ''\nequal toBlock([]), \"\"\nequal toBlock([\"\"]), \"\"\nequal toBlock([\"\", \"\"]), \"\\n\"\nequal toBlock(['a', 'b', 'c']), \"a\\nb\\nc\"\nequal toBlock(['a ', 'b ', 'c ']), \"a\\nb\\nc\"\nequal toBlock(['a','b','c']), \"a\\nb\\nc\"\nequal toBlock(['a',undef,'b','c']), \"a\\nb\\nc\"\nequal toBlock([undef,'a','b','c',undef]), \"a\\nb\\nc\"\n\n# ---------------------------------------------------------------------------\n\nequal firstLine(\"\"\"\n\t#starbucks\n\tdo this\n\tdo that\n\t\"\"\"), '#starbucks'\n\n# ---------------------------------------------------------------------------\n\nequal remainingLines(\"\"\"\n\t#starbucks\n\tdo this\n\tdo that\n\t\"\"\"), \"\"\"\n\tdo this\n\tdo that\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tstr = joinBlocks('import me', '', 'do this\\ndo that')\n\tequal str, \"\"\"\n\t\timport me\n\t\tdo this\n\t\tdo that\n\t\t\"\"\"\n\t)()\n\nequal joinBlocks('a', 'b'), \"a\\nb\"\nequal joinBlocks(['a', 'b']), \"a\\nb\"\n# equal {{LINE}}, joinBlocks([['a', 'b']]), \"a\\nb\"\nequal joinBlocks(['a'], ['b']), \"a\\nb\"\n\n# ---------------------------------------------------------------------------\n\nequal normalizeBlock(\"\"\"\n\tline 1\n\tline 2\n\t\"\"\"), \"\"\"\n\tline 1\n\tline 2\n\t\"\"\"\n\nequal normalizeBlock(\"\"\"\n\tline 1\n\n\tline 2\n\t\"\"\"), \"\"\"\n\tline 1\n\tline 2\n\t\"\"\"\n\nequal normalizeBlock(\"\"\"\n\n\tline 1\n\n\tline 2\n\n\n\t\"\"\"), \"\"\"\n\tline 1\n\tline 2\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nequal truncateBlock(\"\"\"\n\tline 1\n\tline 2\n\tline 3\n\tline 4\n\t\"\"\", 2), \"\"\"\n\tline 1\n\tline 2\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlBlocks = [\n\t\t\"import {say} from '@jdeighan/coffee-utils'\",\n\t\t\"\",\n\t\t\"<script>\\n\\tx = 42\\n</script>\",\n\t\t\"\",\n\t\t]\n\tstr = joinBlocks(lBlocks...)\n\tequal str, \"\"\"\n\t\timport {say} from '@jdeighan/coffee-utils'\n\t\t<script>\n\t\t\tx = 42\n\t\t</script>\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlImports = [\n\t\t\"import {say} from '@jdeighan/coffee-utils'\",\n\t\t]\n\tcode = \"\"\"\n\t\tif (x==42)\n\t\t\tLOG \"line 2 in unit test\"\n\t\t\"\"\"\n\tstr = joinBlocks(lImports..., code)\n\tequal str, \"\"\"\n\t\timport {say} from '@jdeighan/coffee-utils'\n\t\tif (x==42)\n\t\t\tLOG \"line 2 in unit test\"\n\t\t\"\"\"\n\t)()\n"
  ]
}