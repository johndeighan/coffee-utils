{
  "version": 3,
  "file": "SectionMap.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\SectionMap.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# SectionMap.test.coffee\n\nimport {undef, toBlock} from '@jdeighan/base-utils'\nimport {assert} from '@jdeighan/base-utils/exceptions'\nimport {LOG, LOGVALUE} from '@jdeighan/base-utils/log'\nimport {utest, UnitTester} from '@jdeighan/base-utils/utest'\nimport {elem} from '@jdeighan/coffee-utils/html'\n\nimport {SectionMap} from '@jdeighan/coffee-utils/sectionmap'\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t])\n\tutest.truthy map.isEmpty()\n\tutest.falsy  map.nonEmpty()\n\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\tutest.falsy  map.isEmpty()\n\tutest.truthy map.nonEmpty()\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\t<p>para</p>\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'startup'\n\t\t'# |||| ='\n\t\t'code'\n\t\t])\n\tutest.truthy map.isEmpty()\n\tutest.falsy  map.nonEmpty()\n\n\tmap.section('code').add      \"x = 42\"\n\tmap.section('startup').add   \"n = 3\"\n\tutest.falsy  map.isEmpty()\n\tutest.truthy map.nonEmpty()\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\tn = 3\n\t\t# |||| =\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- Test processing\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t], {script: toJS})\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\n\tutest.equal map.getBlock(undef), \"\"\"\n\t\t<p>para</p>\n\t\tx = 42;\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\taddSpaces = (line) -> return line.replace('<p>', '<p> ').replace('</p>', ' </p>')\n\thProc = {\n\t\tscript: toJS\n\t\thtml: addSpaces\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t], hProc)\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\n\tutest.equal map.getBlock(undef), \"\"\"\n\t\t<p> para </p>\n\t\tx = 42;\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\taddSpaces = (line) -> return line.replace('<p>', '<p> ').replace('</p>', ' </p>')\n\thProc = {\n\t\tcode: toJS\n\t\thtml: addSpaces\n\t\tScript: (block) -> return elem('script', undef, block, \"\\t\")\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'code'\n\t\t\t]\n\t\t], hProc)\n\tmap.section('code').add  \"x = 42\"\n\tmap.section('html').add  \"<p>para</p>\"\n\n\tutest.equal map.getBlock(undef), \"\"\"\n\t\t<p> para </p>\n\t\t<script>\n\t\t\tx = 42;\n\t\t</script>\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t])\n\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p> hello </p>\"\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\t<p> hello </p>\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'code'\n\t\t\t]\n\t\t])\n\n\tmap.section('code').add      \"x = 42\"\n\tmap.section('startup').add   \"LOG 'starting'\"\n\tmap.section('html').add      \"<p> hello </p>\"\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\t<p> hello </p>\n\t\tLOG 'starting'\n\t\tx = 42\n\t\t\"\"\"\n\n\tutest.equal map.getBlock('Script'), \"\"\"\n\t\tLOG 'starting'\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'# |||| ='\n\t\t\t'code'\n\t\t\t]\n\t\t])\n\n\tmap.section('code').add      \"x = 42\"\n\tmap.section('startup').add   \"LOG 'starting'\"\n\tmap.section('html').add      \"<h1> title </h1>\"\n\tmap.section('startup').add   \"y = 4*x\"\n\tmap.section('html').add      \"<p> hello </p>\"\n\tmap.section('code').add      \"LOG 'Done'\"\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\t<h1> title </h1>\n\t\t<p> hello </p>\n\t\tLOG 'starting'\n\t\ty = 4*x\n\t\t# |||| =\n\t\tx = 42\n\t\tLOG 'Done'\n\t\t\"\"\"\n\n\tutest.equal map.getBlock('Script'), \"\"\"\n\t\tLOG 'starting'\n\t\ty = 4*x\n\t\t# |||| =\n\t\tx = 42\n\t\tLOG 'Done'\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\thProc = {\n\t\tScript: (block) -> return elem('script', undef, block, \"\\t\")\n\t\tstyle:  (block) -> return elem('style',  undef, block, \"\\t\")\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'# |||| ='\n\t\t\t[\n\t\t\t\t'NonStartup'\n\t\t\t\t'imports'\n\t\t\t\t'code'\n\t\t\t\t]\n\t\t\t]\n\t\t'style'\n\t\t], hProc)\n\n\tmap.section('style').add   [\"p {\", \"...color: red\", \"...}\"]\n\tmap.section('code').add    \"x = 42\"\n\tmap.section('startup').add \"LOG 'starting'\"\n\tmap.section('html').add    \"<h1> title </h1>\"\n\tmap.section('startup').add \"y = 4*x\"\n\tmap.section('html').add    \"<p> hello </p>\"\n\tmap.section('code').add    \"LOG 'Done'\"\n\n\tutest.equal map.getBlock(), \"\"\"\n\t\t<h1> title </h1>\n\t\t<p> hello </p>\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t<style>\n\t\t\tp {\n\t\t\t...color: red\n\t\t\t...}\n\t\t</style>\n\t\t\"\"\"\n\n\tutest.equal map.getBlock('Script'), \"\"\"\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t\"\"\"\n\n\tutest.equal map.getBlock('NonStartup'), \"\"\"\n\t\tx = 42\n\t\tLOG 'Done'\n\t\t\"\"\"\n\n\tutest.equal map.getBlock('style'), \"\"\"\n\t\t<style>\n\t\t\tp {\n\t\t\t...color: red\n\t\t\t...}\n\t\t</style>\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tsectMap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'    # all this gets processed by CoffeeScript\n\t\t\t'startup'\n\t\t\t'# |||| ='  # we can split up the script code here\n\t\t\t'export'\n\t\t\t'import'\n\t\t\t'vars'\n\t\t\t'onmount'\n\t\t\t'ondestroy'\n\t\t\t'code'\n\t\t\t]\n\t\t'style'\n\t\t])\n\n\tclass MyTester extends UnitTester\n\n\t\ttransformValue: (query) ->\n\n\t\t\tlSections = []\n\t\t\tfor section from sectMap.allSections(query)\n\t\t\t\tlSections.push section.name\n\t\t\treturn toBlock(lSections)\n\n\ttester = new MyTester()\n\n\t# ------------------------------------------------------------------------\n\n\ttester.equal ['export','import'], \"\"\"\n\t\texport\n\t\timport\n\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\n\ttester.equal 'Script', \"\"\"\n\t\tstartup\n\t\texport\n\t\timport\n\t\tvars\n\t\tonmount\n\t\tondestroy\n\t\tcode\n\t\t\"\"\"\n\n\t)()\n"
  ]
}