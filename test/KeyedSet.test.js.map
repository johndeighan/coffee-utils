{
  "version": 3,
  "file": "KeyedSet.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\KeyedSet.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# KeyedSet.test.coffee\n\nimport {undef} from '@jdeighan/base-utils'\nimport {\n\tassert, croak, haltOnError, suppressExceptionLogging,\n\t} from '@jdeighan/base-utils/exceptions'\nimport {LOG, LOGVALUE} from '@jdeighan/base-utils/log'\nimport {equal, truthy, succeeds, throws} from '@jdeighan/base-utils/utest'\nimport {KeyedSet} from '@jdeighan/coffee-utils/keyedset'\n\nhaltOnError false\nsuppressExceptionLogging true\n\n# ---------------------------------------------------------------------------\n\nsucceeds () ->\n\tset = new KeyedSet('users', 'name')\n\tset.add 'John Doe'\n\tset.add 'Lewis Foster', {title: 'head developer'}\n\tset.update 'Lewis Foster', {title: 'lead developer'}\n\tset.remove 'John Doe'\n\nsucceeds () ->\n\tset = new KeyedSet('users', ['firstName', 'lastName'])\n\tset.add ['John', 'Doe']\n\tset.add ['Lewis', 'Foster'], {title: 'head developer'}\n\n# ---------------------------------------------------------------------------\n\n# --- 2nd arg to constructor must be string or array\nthrows () ->\n\tset = new KeyedSet('users', 23)\n\n# --- set name must be a string\nthrows () ->\n\tset = new KeyedSet(23, 'name')\n\n# --- set name can't be empty\nthrows () ->\n\tset = new KeyedSet('', 'name')\n\n# --- key name cannot be empty string\nthrows () ->\n\tset = new KeyedSet('users', '')\n\n# --- key name cannot contain empty string\nthrows () ->\n\tset = new KeyedSet('users', ['fName', '', 'lName'])\n\n# --- add() must use same key type\nthrows () ->\n\tset = new KeyedSet('users', ['fName', 'lName'])\n\tset.add 'John Doe'\n\nthrows () ->\n\tset = new KeyedSet('users', 'name')\n\tset.add ['John', 'Doe']\n\n# --- You can only update or delete existing items\nthrows () ->\n\tset = new KeyedSet('users', 'name')\n\tset.add 'John Doe'\n\tset.update 'Billy Bob', {title: 'screwup'}\n\nthrows () ->\n\tset = new KeyedSet('users', 'name')\n\tset.add 'John Doe'\n\tset.remove 'Billy Bob', {title: 'screwup'}\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tset = new KeyedSet('users', 'name')\n\tset.add 'John Doe', {value: 100000}\n\n\tequal set.get('John Doe'), {\n\t\tname: 'John Doe'\n\t\tvalue: 100000\n\t\t}\n\n\tset.add 'Billy Bob', {title: 'cowboy'}\n\tequal set.getAllItems(), [\n\t\t{name: 'John Doe', value: 100000}\n\t\t{name: 'Billy Bob', title: 'cowboy'}\n\t\t]\n\n\tset.remove 'John Doe'\n\tequal set.getAllItems(), [\n\t\t{name: 'Billy Bob', title: 'cowboy'}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tset = new KeyedSet('users', ['fName','lName'])\n\tset.add ['John','Doe'], {value: 100000}\n\n\ttruthy set.has(['John','Doe'])\n\n\tequal set.get(['John','Doe']), {\n\t\tfName: 'John'\n\t\tlName: 'Doe'\n\t\tvalue: 100000\n\t\t}\n\n\tset.add ['Billy','Bob'], {title: 'cowboy'}\n\tequal set.getAllItems(), [\n\t\t{fName: 'John',  lName: 'Doe', value: 100000}\n\t\t{fName: 'Billy', lName: 'Bob', title: 'cowboy'}\n\t\t]\n\n\tset.remove ['John','Doe']\n\tequal set.getAllItems(), [\n\t\t{fName: 'Billy', lName: 'Bob', title: 'cowboy'}\n\t\t]\n\n\t)()\n"
  ]
}